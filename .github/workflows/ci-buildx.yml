name: CI Buildx

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  docker-buildx:
    name: Docker Buildx CI
    runs-on: ubuntu-latest
    services:
      registry:
        image: registry:2
        ports:
          - 5100:5000
        options: >-
          --health-cmd "wget --quiet --tries=1 --spider http://localhost:5000/v2/ || exit 1"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3
          --health-start-period 10s
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker-container
          use: true

      - name: Build and verify compilation
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile.buildx
          target: build
          platforms: linux/amd64
          cache-from: type=gha
          cache-to: type=gha,mode=max
          outputs: type=cacheonly

      - name: Run linting
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile.buildx
          target: lint
          platforms: linux/amd64
          cache-from: type=gha
          outputs: type=cacheonly

      - name: Run static analysis
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile.buildx
          target: static
          platforms: linux/amd64
          cache-from: type=gha
          outputs: type=cacheonly

      - name: Run tests
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile.buildx
          target: test
          platforms: linux/amd64
          cache-from: type=gha
          outputs: type=cacheonly
          build-args: |
            REGISTRY_HOST=localhost:5100

      - name: Verify module consistency
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile.buildx
          target: verify
          platforms: linux/amd64
          cache-from: type=gha
          outputs: type=cacheonly

      - name: Build production image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile.buildx
          target: production
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max
          outputs: type=cacheonly

  # Traditional fallback job (if buildx fails)
  traditional-fallback:
    name: Traditional Build (Fallback)
    runs-on: ubuntu-latest
    if: failure()
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.5'

      - name: Force module mode
        run: |
          echo "GO111MODULE=on" >> $GITHUB_ENV
          echo "GOFLAGS=-mod=mod" >> $GITHUB_ENV
          echo "GOPATH=" >> $GITHUB_ENV

      - name: Build application
        run: go build -o bin/freightliner main.go

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: freightliner-binary-fallback
          path: bin/
          retention-days: 7