name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.20'
          check-latest: true

      - name: Install golangci-lint
        run: curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.52.2

      - name: Run golangci-lint
        run: golangci-lint run --timeout=5m

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.20'
          check-latest: true

      - name: Download dependencies
        run: go mod download

      - name: Format check
        run: |
          if [ "$(gofmt -l . | wc -l)" -gt 0 ]; then
            gofmt -d .
            echo "Code is not formatted with gofmt. Run 'make fmt' to fix."
            exit 1
          fi

      - name: Import organization check
        run: |
          go install golang.org/x/tools/cmd/goimports@latest
          GOIMPORTS_OUTPUT=$(goimports -l -local freightliner .)
          if [ -n "$GOIMPORTS_OUTPUT" ]; then
            echo "Imports not properly organized. Run 'make imports' to fix."
            echo "$GOIMPORTS_OUTPUT"
            exit 1
          fi

      - name: Run tests
        run: go test -v -race ./...

      - name: Run enhanced go vet checks
        run: |
          go install golang.org/x/tools/go/analysis/passes/shadow/cmd/shadow@latest
          go install github.com/mvdan/interfacer/cmd/interfacer@latest
          ./scripts/vet.sh
          
      - name: Run staticcheck
        run: |
          go install honnef.co/go/tools/cmd/staticcheck@latest
          ./scripts/staticcheck.sh
