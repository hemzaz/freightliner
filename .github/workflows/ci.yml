name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

# Global environment variables for all jobs
env:
  GO111MODULE: on
  GOFLAGS: -mod=mod
  GOPATH: ""

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.5'
          check-latest: true

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Download dependencies
        run: go mod download

      - name: Build packages for linting
        run: go build ./...

      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v7
        with:
          version: v2.3.0
          args: --timeout=5m

  test:
    name: Test
    runs-on: ubuntu-latest
    services:
      registry:
        image: registry:2
        ports:
          - 5100:5000
        options: >-
          --health-cmd "wget --quiet --tries=1 --spider http://localhost:5000/v2/ || exit 1"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3
          --health-start-period 10s
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.5'
          check-latest: true

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Download dependencies
        run: go mod download

      - name: Verify module integrity
        run: go mod verify

      - name: Format check
        run: make fmt-check

      - name: Import organization check
        run: make imports-check

      - name: Install go tools
        run: |
          go install golang.org/x/tools/go/analysis/passes/shadow/cmd/shadow@v0.29.0
          go install honnef.co/go/tools/cmd/staticcheck@2025.1.1

      - name: Run go vet
        run: make vet

      - name: Run staticcheck
        run: make staticcheck

      - name: Run tests
        run: go test -v -race ./...
        env:
          REGISTRY_HOST: localhost:5100

  build:
    name: Build
    runs-on: ubuntu-latest
    # Run in parallel with other jobs
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.5'
          check-latest: true

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Download dependencies
        run: go mod download

      - name: Build application
        run: make build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: freightliner-binary
          path: bin/
          retention-days: 7

  # Optional: Add a final status check job that depends on all others
  ci-success:
    name: CI Success
    runs-on: ubuntu-latest
    needs: [lint, test, build]
    if: always()
    steps:
      - name: Check all jobs success
        run: |
          if [[ "${{ needs.lint.result }}" == "success" && 
                "${{ needs.test.result }}" == "success" && 
                "${{ needs.build.result }}" == "success" ]]; then
            echo "All CI jobs passed successfully!"
          else
            echo "Some CI jobs failed"
            exit 1
          fi