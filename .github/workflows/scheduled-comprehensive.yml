# Comprehensive Testing (Scheduled)
name: Comprehensive

on:
  schedule:
    # Run comprehensive tests daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:  # Security: No inputs allowed (CKV_GHA_7)

# Separate concurrency for comprehensive tests
concurrency:
  group: comprehensive-${{ github.run_id }}
  cancel-in-progress: false

env:
  GO_VERSION: '1.24.5'

jobs:
  comprehensive-testing:
    name: Comprehensive Testing
    runs-on: ubuntu-latest
    services:
      registry:
        image: registry:2
        ports:
          - 5100:5000
        options: >
          --health-cmd "wget --quiet --tries=1 --spider
          http://localhost:5000/v2/ || exit 1"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3
          --health-start-period 10s

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go environment
        uses: ./.github/actions/setup-go
        with:
          go-version: ${{ env.GO_VERSION }}
          cache-key-suffix: '-comprehensive'

      - name: Run comprehensive test suite
        uses: ./.github/actions/run-tests
        with:
          test-type: all
          race-detection: true
          coverage: true
          timeout: 30m
        env:
          REGISTRY_HOST: localhost:5100
          TEST_ENV: integration
          RUN_INTEGRATION_TESTS: true

      - name: Run external dependency tests
        if: >
          github.event.inputs.run_external_deps == 'true' ||
          github.event_name == 'schedule'
        run: |
          echo "=== Running External Dependency Tests ==="
          # Set up GCP credentials if provided
          if [ -n "$GOOGLE_APPLICATION_CREDENTIALS_JSON" ]; then
            echo "$GOOGLE_APPLICATION_CREDENTIALS_JSON" > /tmp/gcp-key.json
            export GOOGLE_APPLICATION_CREDENTIALS="/tmp/gcp-key.json"
          fi
          ./scripts/test-with-manifest.sh --env integration --categories external_deps
        env:
          REGISTRY_HOST: localhost:5100
          TEST_ENV: integration
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION || 'us-east-1' }}
          GOOGLE_APPLICATION_CREDENTIALS_JSON:
            ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_JSON }}

      - name: Flaky test detection
        if: >
          github.event.inputs.run_flaky_detection == 'true' ||
          github.event_name == 'schedule'
        run: |
          echo "=== Running Flaky Test Detection ==="
          FAILED_RUNS=0
          TOTAL_RUNS=${{ github.event.inputs.test_iterations || '3' }}
          for i in $(seq 1 $TOTAL_RUNS); do
            echo "=== Flaky Detection Run $i/$TOTAL_RUNS ==="
            if go test -v -timeout 10m ./...; then
              echo "✓ Run $i passed"
            else
              echo "✗ Run $i failed"
              FAILED_RUNS=$((FAILED_RUNS + 1))
            fi
            sleep 2
          done
          echo "=== Flaky Test Results ==="
          echo "Total runs: $TOTAL_RUNS"
          echo "Failed runs: $FAILED_RUNS"
          echo "Success rate: $(( (TOTAL_RUNS - FAILED_RUNS) * 100 / TOTAL_RUNS ))%"
          if [ $FAILED_RUNS -gt 0 ]; then
            echo "⚠️ Flaky tests detected: $FAILED_RUNS/$TOTAL_RUNS runs failed"
          else
            echo "✅ No flaky behavior detected"
          fi
        env:
          REGISTRY_HOST: localhost:5100
          TEST_ENV: integration

      - name: Upload comprehensive test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: comprehensive-test-results
          path: |
            test-results/
            coverage-*.out
          retention-days: 30

      - name: Generate summary report
        if: always()
        run: |
          echo "# Comprehensive Testing Report" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## Test Configuration" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "Go Version: $(go version)" >> $GITHUB_STEP_SUMMARY
          echo "Test Coverage Results:" >> $GITHUB_STEP_SUMMARY
          if [ -f coverage/coverage.out ]; then
            go tool cover -func=coverage/coverage.out | tail -1 >> $GITHUB_STEP_SUMMARY
          fi
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## Execution Details" >> $GITHUB_STEP_SUMMARY
          echo "- **Trigger**: ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- **External Dependencies**: ${{ github.event.inputs.run_external_deps || 'auto' }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Flaky Detection**: ${{ github.event.inputs.run_flaky_detection || 'auto' }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Environment**: integration" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Generated at: $(date -u)" >> $GITHUB_STEP_SUMMARY
