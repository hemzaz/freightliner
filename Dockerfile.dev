# Development Dockerfile for Freightliner
# Optimized for development workflow with hot reload and debugging

FROM golang:1.21

# Install development tools and dependencies
RUN apt-get update && apt-get install -y \
    git \
    ca-certificates \
    curl \
    vim \
    htop \
    && rm -rf /var/lib/apt/lists/*

# Install air for hot reload
RUN go install github.com/cosmtrek/air@latest

# Install dlv for debugging
RUN go install github.com/go-delve/delve/cmd/dlv@latest

# Create non-root user
RUN useradd -m -s /bin/bash -u 1001 appuser

# Set working directory
WORKDIR /app

# Copy go mod files
COPY go.mod go.sum ./

# Download dependencies
RUN go mod download

# Copy source code
COPY . .

# Change ownership to appuser
RUN chown -R appuser:appuser /app

# Switch to non-root user
USER appuser

# Expose ports
EXPOSE 8080 2345

# Create air config
RUN echo '[build]\n\
  bin = "./tmp/main"\n\
  cmd = "go build -o ./tmp/main ."\n\
  delay = 1000\n\
  exclude_dir = ["assets", "tmp", "vendor", "testdata"]\n\
  exclude_file = []\n\
  exclude_regex = ["_test.go"]\n\
  exclude_unchanged = false\n\
  follow_symlinks = false\n\
  full_bin = ""\n\
  include_dir = []\n\
  include_ext = ["go", "tpl", "tmpl", "html"]\n\
  kill_delay = "0s"\n\
  log = "build-errors.log"\n\
  send_interrupt = false\n\
  stop_on_root = false\n\
[color]\n\
  app = ""\n\
  build = "yellow"\n\
  main = "magenta"\n\
  runner = "green"\n\
  watcher = "cyan"\n\
[log]\n\
  time = false\n\
[misc]\n\
  clean_on_exit = false' > .air.toml

# Default command for development
CMD ["air", "-c", ".air.toml"]