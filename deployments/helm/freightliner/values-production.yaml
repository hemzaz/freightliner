# Production environment values for freightliner
# Override default values for production deployment

# Global configuration
global:
  imageRegistry: "gcr.io/company-prod"
  imagePullSecrets:
    - name: gcr-secret
  storageClass: "fast-ssd"

# Application configuration
image:
  repository: freightliner/app
  tag: "1.0.0"
  pullPolicy: Always

# High availability configuration
replicaCount: 5

# Production service configuration
service:
  type: LoadBalancer
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: "arn:aws:acm:us-west-2:account:certificate/cert-id"
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "tcp"
    service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "443"

# Production ingress
ingress:
  enabled: true
  className: nginx
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/rate-limit: "200"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "120"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-body-size: "500m"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/whitelist-source-range: "10.0.0.0/8,172.16.0.0/12,192.168.0.0/16"
  hosts:
    - host: freightliner-prod.company.com
      paths:
        - path: /
          pathType: Prefix
    - host: api-freightliner-prod.company.com
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: freightliner-prod-tls-cert
      hosts:
        - freightliner-prod.company.com
        - api-freightliner-prod.company.com

# Production resource limits
resources:
  limits:
    cpu: 4000m
    memory: 8Gi
  requests:
    cpu: 1000m
    memory: 2Gi

# Production auto-scaling
autoscaling:
  enabled: true
  minReplicas: 5
  maxReplicas: 20
  targetCPUUtilizationPercentage: 60
  targetMemoryUtilizationPercentage: 70

# Production configuration
config:
  logLevel: warn
  port: 8080
  
  # AWS configuration
  aws:
    region: us-west-2
  
  # GCP configuration
  gcp:
    projectId: company-prod-123456
    region: us-central1
  
  # Performance tuning for production
  workerPoolSize: 20
  maxConcurrentReplications: 10
  httpTimeout: 600s
  retryAttempts: 5
  
  # Monitoring
  metricsEnabled: true
  metricsPort: 2112

# Production security
securityContext:
  runAsNonRoot: true
  runAsUser: 1000
  runAsGroup: 3000
  fsGroup: 2000
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  capabilities:
    drop:
      - ALL
  seccompProfile:
    type: RuntimeDefault

# Production environment
environment: production

# Production node selection
nodeSelector:
  node-type: production
  instance-size: large

# Production tolerations
tolerations:
  - key: "production"
    operator: "Equal"
    value: "true"
    effect: "NoSchedule"

# Production affinity rules
affinity:
  podAntiAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchExpressions:
            - key: app.kubernetes.io/name
              operator: In
              values:
                - freightliner
        topologyKey: kubernetes.io/hostname
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
        - matchExpressions:
            - key: node-type
              operator: In
              values:
                - production

# Production network policies
networkPolicy:
  enabled: true
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              name: ingress-nginx
      ports:
        - protocol: TCP
          port: 8080
    - from:
        - namespaceSelector:
            matchLabels:
              name: monitoring
      ports:
        - protocol: TCP
          port: 8080
        - protocol: TCP
          port: 2112
  egress:
    # DNS resolution
    - ports:
        - protocol: UDP
          port: 53
        - protocol: TCP
          port: 53
    # HTTPS for external APIs
    - ports:
        - protocol: TCP
          port: 443
    # HTTP for health checks
    - ports:
        - protocol: TCP
          port: 80

# Production persistence
persistence:
  enabled: true
  storageClass: "fast-ssd"
  accessMode: ReadWriteOnce
  size: 50Gi
  annotations:
    volume.beta.kubernetes.io/storage-class: "fast-ssd"

# Production monitoring
monitoring:
  serviceMonitor:
    enabled: true
    namespace: monitoring
    interval: 15s
    path: /metrics
    port: metrics
    labels:
      team: platform
      environment: production
    annotations:
      prometheus.io/scrape: "true"

# Production pod disruption budget
podDisruptionBudget:
  enabled: true
  minAvailable: 3

# Production service account with annotations for AWS IAM roles
serviceAccount:
  create: true
  annotations:
    eks.amazonaws.com/role-arn: "arn:aws:iam::ACCOUNT:role/freightliner-prod-role"
    # GCP Workload Identity
    iam.gke.io/gcp-service-account: "freightliner-prod@company-prod-123456.iam.gserviceaccount.com"